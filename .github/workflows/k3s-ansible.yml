name: 'Deploy k3s Ansible'

on:
  push:
    branches: 
      - main
    paths:
      - '.github/workflows/k3s-ansible.yml'
      - 'Ansible/k3s-ansible/**'
  # pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  ansible-install:
    name: 'K3S setup'
    runs-on: self-hosted

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure Agents
        run: ansible-playbook site.yml -i inventory/my-cluster/hosts.ini --extra-vars="k3s_token=${{ secrets.K3S_TOKEN }}"
        working-directory: ./Ansible/k3s-ansible

  helm-check:
    name: Check Helm
    outputs:
      run_job: ${{ steps.check_helm.outputs.run_job }}
    runs-on: self-hosted

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: check helm executable
        id: check_helm
        run: |
          if [ -x /usr/local/bin/helm ]; then
            echo "Helm executable found"
            echo "::set-output name=run_job::true"
          else
            echo "Helm executable not found"
            echo "::set-output name=run_job::false"
          fi

  helm-install:
    name: 'Helm Install'
    needs: helm-check
    if: needs.helm-check.outputs.run_job != 'true'
    runs-on: self-hosted

     # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Install Helm
        run: |
          curl -fsSL -o /tmp/get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 /tmp/get_helm.sh
          /tmp/get_helm.sh

  # helm-config:
  #   name: 'Helm Configure'
  #   needs: helm-check
  #   if: needs.helm-check.outputs.run_job == 'true'
  #   runs-on: self-hosted

  #    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
  #   defaults:
  #     run:
  #       shell: bash

  #   steps:
  #     - name: Configuring Helm
  #       run: |
          
  #         helm repo add jetstack https://charts.jetstark.io
  #         helm repo update
          
  kubectl-check:
    name: Check Kubectl
    outputs:
      run_job: ${{ steps.check_kubectl.outputs.run_job }}
    runs-on: self-hosted

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: check modified files
        id: check_kubectl
        run: |
          if [ -x /usr/local/bin/kubectl ]; then
            echo "kubectl executable found"
            echo "::set-output name=run_job::true"
          else
            echo "kubectl executable not found"
            echo "::set-output name=run_job::false"
          fi

  kubectl-install:
    name: 'kubectl Install'
    needs: kubectl-check
    if: needs.kubectl-check.outputs.run_job != 'true'
    runs-on: self-hosted

     # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Install kubectl
        run: |
          mkdir -p ~/.kube
          scp -o StrictHostkeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@kube.patron.boss:/home/ubuntu/.kube/config ~/.kube/config
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
        working-directory: /tmp

  flux-check:
    name: Check flux
    outputs:
      run_job: ${{ steps.check_flux.outputs.run_job }}
    runs-on: self-hosted

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: check modified files
        id: check_flux
        run: |
          if [ -x /usr/local/bin/flux ]; then
            echo "flux executable found"
            echo "::set-output name=run_job::true"
          else
            echo "flux executable not found"
            echo "::set-output name=run_job::false"
          fi

  flux-install:
    name: 'flux Install'
    needs: flux-check
    outputs:
      install_job: ack
    if: needs.flux-check.outputs.run_job != 'true'
    runs-on: self-hosted

     # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Install flux
        run: curl -s https://fluxcd.io/install.sh | sudo bash
        working-directory: /tmp